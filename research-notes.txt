--------------------------------------------------------------------------
-- research-notes.txt
--------------------------------------------------------------------------

--------------------------------------------------------------------------
Article 1:

Title: gibberwocky: New Live-Coding Instruments for Musical Performance: 
By: Charles Roberts and Graham Wakefield
Citation: Roberts, C., & Wakeﬁeld, G. (n.d.). gibberwocky: New Live-Coding Instruments for Musical Performance.
Link: https://www.researchgate.net/profile/Graham-Wakefield/publication/320930311_gibberwocky_New_Live-Coding_Instruments_for_Musical_Performance/links/5a030d7fa6fdcc6b7c9bef17/gibberwocky-New-Live-Coding-Instruments-for-Musical-Performance.pdf

Uses Midi and mentions Supercollider.

Interfaces focusing on text, featuring typing as the main input modality, remain the dominant paradigm. Live music coding space mainly still uses text inputs. 

Uses some JavaScript, uses WebSocket has browser interface.

Summary:

Talks about two new environment gibberwocky.max and gibberwocky.midi. They also introduce a editor     for their gibberwocky and some visual feedback and easier input methods.

--------------------------------------------------------------------------
Article 2:

Title: The Web Browser As Synthesizer And Interface
By: Charles Roberts, Graham Wakefield and, Matthew Wright
Citation: Roberts, C., Wakefield, G., & Wright, M. (2017). 2013: The Web Browser as Synthesizer and Interface. In A. R. Jensenius & M. J. Lyons (Eds.), A NIME Reader (Vol. 3, pp. 433–450). Springer International Publishing. https://doi.org/10.1007/978-3-319-47214-0_28
Link: https://www.mat.ucsb.edu/Publications/WebBrowser-as-Synth-Interface.pdf

Uses JavaScript. Introduces 2 JavaScript libraries. Browser based. Web Audio API.

Mentions MIDI. They also have a sequencer and they understand that the JavaScript timer is not accurate and have their own solution.

Libraries to look into:

Flocking: https://www.npmjs.com/package/flocking

Does live coding music in a browser interface. Can do remote control stuff with http server inplementation.

--------------------------------------------------------------------------
Article 3:

Title: Teaching Computational Thinking through Musical Live Coding in Scratch
By: Alex Ruthmann, Jesse M. Heines, Gena R. Greher, Paul Laidler and, Charles Saulters II.
Citation: Ruthmann, A., Heines, J. M., Greher, G. R., Laidler, P., & Saulters, C. (2010). Teaching computational thinking through musical live coding in scratch. Proceedings of the 41st ACM Technical Symposium on Computer Science Education, 351–355. https://doi.org/10.1145/1734263.1734384
Link : https://doi.org/10.1145/1734263.1734384

Teaching plan integrating programming with music.

Using Scratch and some kind of circuit board called IchiBoards. They alos have live coding music too.

--------------------------------------------------------------------------
Article 4:

Title: GIBBER: LIVE CODING AUDIO IN THE BROWSER
By: Charles Roberts, JoAnn Kuchera-Morin
Citation: Roberts, C., & Kuchera-Morin, J. (2012). Gibber: Live coding audio in the browser. In ICMC (Vol. 11, p. 6).
Link: https://www.researchgate.net/profile/Charlie-Roberts-4/publication/283595161_Gibber_Live_coding_audio_in_the_browser/links/5a6e928a0f7e9bd4ca6d549b/Gibber-Live-coding-audio-in-the-browser.pdf

Uses Javascript. Has simple to use API. Can do many things on of the first live music coding environments conded in Javascript.

--------------------------------------------------------------------------
Article 5:

Title: QuaverSeries: A Live Coding Environment for Music Performance Using Web Technologies
By: Qichao Lan and Alexander Refsum Jensenius
Citation: Lan, Q., & Jenseniu, A. R. (n.d.). QuaverSeries: A Live Coding Environment for Music Performance Using Web Technologies. 
Link: https://www.duo.uio.no/bitstream/handle/10852/79544/2019_26.pdf?sequence=5

They follow the school essay format we are given.

Want a web interface because it is quicker to set up and no installation.

This tidal library written in Haskell sounds a lot like Konduktiva. Code is interpreted and sent as OSC messages to control the sound engine called SuperDirt running in SuperCollider. 

Second half of that message taken from the article itself.

Mentions gibber

In this paper we have presented the three parts of QuaverSeries: 1) a new domain-specific language, 
2) an interface to edit and run the code, and 
3) a new way of collaborating using ‘virtual rooms.

--------------------------------------------------------------------------
Article 6:

Title: Live Coding the Digital Audio Workstation
By: Charles Roberts and Graham Wakefield
Citation: Roberts, C., & Wakeﬁeld, G. (n.d.). Live Coding the Digital Audio Workstation.
Link: http://charlie-roberts.com/pubs/Live_Coding_DAW.pdf

Talks a lot about existing live coding tools.

Uses web socket to share data between Ableton live and different clients.

JSON data is sent

Uses midi

Provides very similar features to Konduktiva

Has pattern generation

Easy to use user API with control over timing and QuantizedMap Like features

They have the player feature which they call score

They have the musical environment in form of Live Object model

Musical stuff can be stored in variables that can be used later. Like I can do with my configuration objects.

Has a API similar to Hydra.

Mentions a few of the articles read before

Has a UI with animations to show users what is happening
--------------------------------------------------------------------------
Article 7:

Title: Educational design of live coding environments for the browser
By: Charlie Roberts, Jesse Allison, Daniel Holmes, Benjamin Taylor, Matthew Wright and, JoAnn Kuchera-Morin
Citation: Roberts, C., Allison, J., Holmes, D., Taylor, B., Wright, M., & Kuchera-Morin, J. (2016). Educational design of live coding environments for the browser. Journal of Music, Technology & Education, 9(1), 95-116.
Link: https://drive.google.com/drive/folders/1MnWC00vHoGzXhW4Sk6fkvPmsHP1wcU0h

Their experience using gibber to educate people about Javascript, music, and other programming concepts like object oriented programming.

--------------------------------------------------------------------------
Article 8:

Title: Designing Constraints: Composing and Performing with Digital Musical Systems
By: Thor Magnusson
Citation: Magnusson, T. (2010). Designing Constraints: Composing and Performing with Digital Musical Systems. Computer Music Journal, 34(4), 62–73. https://doi.org/10.1162/COMJ_a_00026
Link: https://www.researchgate.net/profile/Thor-Magnusson/publication/220386644_Designing_Constraints_Composing_and_Performing_with_Digital_Musical_Systems/links/5893498645851563f828e2fe/Designing-Constraints-Composing-and-Performing-with-Digital-Musical-Systems.pdf

--------------------------------------------------------------------------
Article 9:

Title: Patterns of User Experience in Performance Programming
By: Alan F. Blackwell
Citation: Blackwell, A. F. (n.d.). Patterns of User Experience in Performance Programming.
Link: https://iclc.toplap.org/2015/meta/66_Patterns_of_User_Experience_in_Perfor.pdf

--------------------------------------------------------------------------
Article 10:

Title: The Programming Language as a Musical Instrument
By: Alan Blackwell and Nick Collins
Citaion: Blackwell, A., & Collins, N. (2005). The Programming Language as a Musical Instrument.
Link: https://www.ppig.org/files/2005-PPIG-17th-blackwell.pdf
